#!/usr/bin/python3

import amulet
import requests

seconds = 20000

d = amulet.Deployment(series='trusty')

d.add('nagios')
d.add('mysql')
d.add('mediawiki')

d.relate('mysql:db', 'mediawiki:db')
d.relate('nagios:monitors', 'mysql:monitors')
d.relate('nagios:nagios', 'mediawiki:juju-info')

d.expose('nagios')

try:
    d.setup(timeout=seconds)
except amulet.helpers.TimeoutError:
    amulet.raise_status(amulet.SKIP, msg="Environment wasn't stood up in time")
except:
    raise


##
# Set relationship aliases
##
mysql_unit = d.sentry['mysql'][0]
mediawiki_unit = d.sentry['mediawiki'][0]
nagios_unit = d.sentry['nagios'][0]


# Validate that the web interface has htpasswd authentication
def test_web_interface_is_protected():
    r = requests.get("http://%s/nagios3/" % nagios_unit.info['public-address'])
    if r.status_code != 401:
        amulet.raise_status(amulet.FAIL, msg="Web Interface open to the world")
    # validate that our configured admin is valid
    nagpwd = nagios_unit.file_contents('/var/lib/juju/nagios.passwd').strip()
    r = requests.get("http://%s/nagios3/" % nagios_unit.info['public-address'],
                     auth=('nagiosadmin', nagpwd))
    if r.status_code != 200:
        amulet.raise_status(amulet.FAIL, msg="Web Admin login failed")


def test_hosts_being_monitored():
    nagpwd = nagios_unit.file_contents('/var/lib/juju/nagios.passwd').strip()
    host_url = ("http://%s/cgi-bin/nagios3/status.cgi?"
                "hostgroup=all&style=hostdetail")
    r = requests.get(host_url % nagios_unit.info['public-address'],
                     auth=('nagiosadmin', nagpwd))
    if not (r.text.find('mysql') and r.text.find('mediawiki')):
        amulet.raise_status(amulet.ERROR,
                            msg='Nagios is not monitoring the' +
                            ' hosts it supposed to.')


test_web_interface_is_protected()
test_hosts_being_monitored()
