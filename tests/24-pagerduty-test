#!/usr/bin/python3

from time import sleep
import amulet
# import requests

seconds = 20000

d = amulet.Deployment(series='trusty')

d.add('nagios')

d.expose('nagios')

try:
    d.setup(timeout=seconds)
    d.sentry.wait()
except amulet.helpers.TimeoutError:
    amulet.raise_status(amulet.SKIP, msg="Environment wasn't stood up in time")
except:
    raise


##
# Set relationship aliases
##
nagios_unit = d.sentry['nagios'][0]

d.configure('nagios', {
    'enable_pagerduty': True
})

d.sentry.wait()

# Give it a while to settle
sleep(30)

def test_pagerduty_path_exists():
    pagerduty_path = nagios_unit.run('config-get pagerduty_path')
    try:
        pagerduty_file = nagios_unit.file(pagerduty_path[0])
    except OSError:
        message = "Can't find pagerduty directory"
        amulet.raise_status(amulet.FAIL, msg=message)


def test_pagerduty_config():
    pagerduty_cfg = '/etc/nagios3/conf.d/pagerduty_nagios.cfg'
    try:
        pagerduty_cfg_file = nagios_unit.file(pagerduty_cfg)
    except OSError:
        message = "Can't find pagerduty config file"
        amulet.raise_status(amulet.FAIL, msg=message)

test_pagerduty_path_exists()
test_pagerduty_config()
