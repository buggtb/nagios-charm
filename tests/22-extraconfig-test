#!/usr/bin/python3

import amulet
import requests

seconds = 20000

d = amulet.Deployment(series='trusty')

d.add('nagios')
d.add('mysql')

d.expose('nagios')
d.expose('mysql')

try:
    d.setup(timeout=seconds)
    d.sentry.wait()
except amulet.helpers.TimeoutError:
    amulet.raise_status(amulet.SKIP, msg="Environment wasn't stood up in time")
except:
    raise


##
# Set relationship aliases
##
mysql_unit = d.sentry['mysql'][0]
nagios_unit = d.sentry['nagios'][0]

d.configure('nagios', {
    'extraconfig': """
    define host{
    use                     generic-host  ; Name of host template to use
    host_name               server02
    alias                   Server 02
    address                 %s
}""" % mysql_unit.info['public-address']
})

d.sentry.wait()


def test_hosts_being_monitored():
    nagpwd = nagios_unit.file_contents('/var/lib/juju/nagios.passwd').strip()
    host_url = ("http://%s/cgi-bin/nagios3/status.cgi?"
                "hostgroup=all&style=hostdetail")
    r = requests.get(host_url % nagios_unit.info['public-address'],
                     auth=('nagiosadmin', nagpwd))
    if not r.text.find('server02'):
        amulet.raise_status(amulet.ERROR,
                            msg='Nagios is not monitoring the' +
                            ' hosts it supposed to.')


test_hosts_being_monitored()
