#!/usr/bin/python3

import sys

import amulet
import requests

seconds = 20000

d = amulet.Deployment(series='trusty')

d.add('nagios')
d.add('mysql')
d.add('mediawiki')

d.relate('mysql:db', 'mediawiki:db')
d.relate('nagios:monitors', 'mysql:monitors')
d.relate('nagios:nagios', 'mediawiki:juju-info')

d.expose('nagios')

try:
    d.setup(timeout=seconds)
    d.sentry.wait()
except amulet.helpers.TimeoutError:
    amulet.raise_status(amulet.SKIP, msg="Environment wasn't stood up in time")
except:
    raise


##
# Set relationship aliases
##
mysql_unit = d.sentry['mysql'][0]
mediawiki_unit = d.sentry['mediawiki'][0]
nagios_unit = d.sentry['nagios'][0]


def test_web_interface_without_ssl():
    d.configure('nagios', {
        'ssl': 'off'
    })
    d.sentry.wait()

    nagpwd = nagios_unit.file_contents('/var/lib/juju/nagios.passwd').strip()
    r = requests.get("http://%s/nagios3/" % nagios_unit.info['public-address'],
                     auth=('nagiosadmin', nagpwd))
    if r.status_code != 200:
        amulet.raise_status(amulet.FAIL,
                            msg="Error connecting without ssl, when ssl=off")

    try:
        r = requests.get(
            "https://%s/nagios3/" % nagios_unit.info['public-address'],
            auth=('nagiosadmin', nagpwd), verify=False)
    except requests.ConnectionError:
        pass
    else:
        amulet.raise_status(amulet.FAIL, msg='Accepting SSL when ssl is off.')


def test_web_interface_with_ssl():
    d.configure('nagios', {
        'ssl': 'on'
    })
    d.sentry.wait()

    nagpwd = nagios_unit.file_contents('/var/lib/juju/nagios.passwd').strip()
    r = requests.get("http://%s/nagios3/" % nagios_unit.info['public-address'],
                     auth=('nagiosadmin', nagpwd))
    if r.status_code != 200:
        amulet.raise_status(amulet.FAIL,
                            msg="Error connecting without ssl, when ssl=on")

    try:
        r = requests.get(
            "https://%s/nagios3/" % nagios_unit.info['public-address'],
            auth=('nagiosadmin', nagpwd), verify=False)
        if r.status_code != 200:
            amulet.raise_status(amulet.FAIL,
                                msg="Error connecting with ssl, when ssl=on")
    except requests.ConnectionError:
        amulet.raise_status(amulet.FAIL,
                            msg=('Error connecting with ssl, when ssl=on.'
                                 ' Error %s' % sys.exc_info()[0]))


def test_web_interface_with_only_ssl():
    d.configure('nagios', {
        'ssl': 'only'
    })
    d.sentry.wait()

    nagpwd = nagios_unit.file_contents('/var/lib/juju/nagios.passwd').strip()
    r = requests.get(
        "https://%s/nagios3/" % nagios_unit.info['public-address'],
        auth=('nagiosadmin', nagpwd), verify=False)
    if r.status_code != 200:
        amulet.raise_status(amulet.FAIL,
                            msg=("Error connecting with ssl, when ssl=only. "
                                 "Status Code: %s" % r.status_code))

    try:
        r = requests.get(
            "http://%s/nagios3/" % nagios_unit.info['public-address'],
            auth=('nagiosadmin', nagpwd))
        if r.status_code == 200:
            amulet.raise_status(amulet.FAIL,
                                msg=("Error connecting without ssl,"
                                     " when ssl=only."
                                     "Status Code: %s" % r.status_code))
    except requests.ConnectionError:
        pass

test_web_interface_without_ssl()
test_web_interface_with_ssl()
test_web_interface_with_only_ssl()
